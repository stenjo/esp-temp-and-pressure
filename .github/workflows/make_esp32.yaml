name: Reusable ESP32 variants build firmware

on:
    workflow_call:
        inputs:
            board:
                required: true
                type: string
            path:
                required: true
                type: string
jobs:
    build: 
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
    
        - name: Install tools
          run: |
            pip install esptool freezefs vfs-merge
            git clone -b v5.2.2 --recursive https://github.com/espressif/esp-idf.git
    
        - name: idf
          working-directory: esp-idf
          run: |
            git submodule  update --init --recursive
            ./install.sh
            
        - name: Initialize submodules and create frozen modules
          run: |
            source esp-idf/export.sh
            git submodule update --init lib/micropython
            pip install freezefs
            make prepare
            
        - name: Compile firmware
          working-directory: boards/${{ inputs.path }}
          run: |
            source ../../esp-idf/export.sh
            make
            zip -r ${{ inputs.board }}.zip build -x build/CMakeFiles/**/*.bin -x build/bootloader/CMakeFiles/**/*.bin  -i *.bin -i *.elf
          
        - name: Merge with src files
          continue-on-error: true
          run: |
            mkdir build
            vfsmerge --port ${{ inputs.board }} --firmware ./boards/${{ inputs.path }}/build/micropython.bin
          
        - name: Save binary
          uses: actions/upload-artifact@v4
          with:
            name: ${{ inputs.board }}-binary
            path: boards/${{ inputs.path }}/${{ inputs.board }}.zip
      
        - name: Save binary
          continue-on-error: true
          uses: actions/upload-artifact@v4
          with:
            name: ${{ inputs.board }}-binary-src
            path: build/firmware_lfs.bin
    